# build and make
name: app build

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    tags:
        - '*'
  pull_request:
    branches: [ main ]

jobs:
  build_windows:
    # if: false # disable build
    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - name: Checkout App
      uses: actions/checkout@v2.3.4
      with:
        # Repository name with owner. For example, actions/checkout
        repository: soundshed/soundshed-app
        path: app-public
    
    - name: Checkout env
      uses: actions/checkout@v2.3.4
      with:
        repository: soundshed/soundshed-private
        path: app-private
        token: ${{ secrets.PAT_TOKEN }}
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - run: |
        copy app-private\env.ts app-public\src     
        cd app-public
        cp .\src\core\platformUtils.electron.ts .\src\core\platformUtils.ts
        npm install
        npm run build-electron
        npm run make
      env:
        WIN_CODE_SIGNING_P12: ..\app-private\signing.pfx
        WIN_CODE_SIGNING_PWD: ${{ secrets.WIN_CODE_SIGN_PWD }}
        
    - name: upload
      uses: actions/upload-artifact@v2
      with: 
          name: soundshed-win-x64
          path: app-public/out/make/squirrel.windows/x64/*
   
  build_linux_ubuntu:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - name: Checkout App
      uses: actions/checkout@v2.3.4
      with:
        # Repository name with owner. For example, actions/checkout
        repository: soundshed/soundshed-app
        path: app-public
    
    - name: Checkout env
      uses: actions/checkout@v2.3.4
      with:
        repository: soundshed/soundshed-private
        path: app-private
        token: ${{ secrets.PAT_TOKEN }}
        
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
        
    - run: sudo apt-get install build-essential libbluetooth-dev
  
    - run: |
        cp app-private/env.ts app-public/src     
        cd app-public
        cp ./src/core/platformUtils.electron.ts ./src/core/platformUtils.ts
        npm install
        npm run build-electron
        npm run make

    - name: upload
      uses: actions/upload-artifact@v2
      with: 
          name: soundshed-linux-x64
          path: app-public/out/make/zip/linux/x64/*.zip
     
  build_macos:
    runs-on: macos-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - name: Checkout App
      uses: actions/checkout@v2.3.4
      with:
        # Repository name with owner. For example, actions/checkout
        repository: soundshed/soundshed-app
        path: app-public
    
    - name: Checkout env
      uses: actions/checkout@v2.3.4
      with:
        repository: soundshed/soundshed-private
        path: app-private
        token: ${{ secrets.PAT_TOKEN }}
        
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
        
        # run make, setup code signing first: https://localazy.com/blog/how-to-automatically-sign-macos-apps-using-github-actions
    - run: |
        cp app-private/env.ts app-public/src   
        echo $MACOS_CERTIFICATE | base64 --decode > app-private/certificate.p12
        security create-keychain -p $MACOS_APP_SIGNING_PWD app-private/build.keychain
        security default-keychain -s app-private/build.keychain
        security unlock-keychain -p $MACOS_APP_SIGNING_PWD app-private/build.keychain
        security import app-private/certificate.p12 -k app-private/build.keychain -P $MACOS_APP_SIGNING_PWD -T /usr/bin/codesign
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k $MACOS_APP_SIGNING_PWD app-private/build.keychain
        cd app-public
        cp ./src/core/platformUtils.electron.ts ./src/core/platformUtils.ts
        npm install
        npm run build-electron
        npm run make
      env:
        MACOS_APPLEID: ${{ secrets.MACOS_APPLEID }}
        MACOS_APP_SIGNING_PWD: ${{ secrets.MACOS_APP_SIGNING_PWD }}
        MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
      
    - name: upload
      uses: actions/upload-artifact@v2
      with: 
          name: soundshed-macos-x64
          path: app-public/out/make/zip/darwin/x64/*.zip
          
  
